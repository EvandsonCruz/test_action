name: Validar Commits nos Arquivos SQL
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited

jobs:
  validar-commits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configurar variável de ambiente GH_TOKEN
      run: echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV 

    - name: Obter lista de arquivos alterados e validar commits
      run: |
        # Inicializar variável
        naotem=false
        arquivo_com_erro=""
        colunas_faltando=()

        # Definir lista de colunas necessárias
        colunas=("DT_ATLZ" "DT_CRIACAO" "USUARIO_CRIACAO" "USUARIO_ATUALIZACAO")
        
        # Obter a lista de arquivos alterados no pull request
        arquivos_alterados=$(git diff --name-only HEAD^1)

        for arquivo in $arquivos_alterados; do
          # Verificar se o arquivo contém uma declaração CREATE TABLE
          if grep -qiE 'CREATE TABLE' "$arquivo"; then
            # Verificar se todas as colunas necessárias existem
            for coluna in "${colunas[@]}"; do
              if ! grep -qiE "$coluna" "$arquivo"; then
                naotem=true
                arquivo_com_erro="$arquivo"
                colunas_faltando+=("$coluna")
                echo "A criação da tabela no arquivo $arquivo não tem a coluna de auditoria: $coluna"
              fi
            done
            if [ "$naotem" = true ]; then
              break
            else
              echo "A criação da tabela no arquivo $arquivo tem todas as colunas de auditoria necessárias"
            fi
          fi
        done

        if [ "$naotem" = true ]; then
          colunas_faltando_str=$(IFS=, ; echo "${colunas_faltando[*]}")
          echo "::error::A criação da tabela no arquivo $arquivo_com_erro não tem todos os campos de auditoria necessários: $colunas_faltando_str"
          SLACK_MESSAGE="PR ${{ github.event.number }} - github.com/${{ github.repository }}/pull/${{ github.event.number }}/files (${{ github.base_ref }})\nA criação da tabela no arquivo $arquivo_com_erro não tem todos os campos de auditoria necessários: $colunas_faltando_str"
          curl -X POST -H 'Content-type: application/json' --data '{"text":"'"$SLACK_MESSAGE"'"}' ${{ secrets.SLACK_WEBHOOK_URL }}
          PR_NUMBER=$(echo "${{ github.event.pull_request.html_url }}" | awk -F'/' '{print $NF}')
          REPO_OWNER=$(echo "${{ github.repository }}" | cut -d '/' -f 1)
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          AUTHOR_NAME=${{ github.event.pull_request.user.login }}
          gh pr comment $PR_NUMBER -R $REPO_OWNER/$REPO_NAME --body "@$AUTHOR_NAME
          A criação da tabela no arquivo $arquivo_com_erro não tem todos os campos de auditoria necessários: $colunas_faltando_str."
          #gh pr close ${{ github.event.number }}
        else
          echo "PR OK"
        fi
