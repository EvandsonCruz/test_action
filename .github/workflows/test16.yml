name: validar-create-table

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited
    paths-ignore:
      - '.github/workflows/**'

jobs:
  validar-coluna-duplicada:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configurar variável de ambiente GH_TOKEN
      run: echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV 

    - name: Obter conteúdo do pull request
      id: obter-conteudo
      run: |
        BASE_COMMIT=$(git merge-base ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
        arquivos_adicionados=($(git diff --name-only $BASE_COMMIT ${{ github.sha }}))
        
        set -x
        encontrada=false
        saida=""

        for arquivo in "${arquivos_adicionados[@]}"; do
          if grep -Eiq 'create table' "$arquivo"; then
            echo "Validando arquivo adicionado: $arquivo"

            # Extrair conteúdo entre parênteses após CREATE TABLE
            colunas=$(awk 'BEGIN{IGNORECASE=1} /CREATE TABLE/{flag=1; next} /\)/{flag=0} flag' "$arquivo" |
                      sed -e 's/^[^)]*(//' -e 's/)[^)]*$//' |  # Remove o texto antes e depois dos parênteses
                      sed 's/^\s*//;s/\s*$//' |  # Remove espaços
                      grep -v -i 'CONSTRAINT' |  # Remove linhas com restrições
                      tr -d '[:space:]' |  # Remove espaços em branco restantes
                      grep -v '^[^a-zA-Z0-9_]' |  # Remove linhas que não contêm nomes de colunas válidos
                      tr ',' '\n' |  # Quebra as colunas em linhas
                      sort |
                      uniq -d)  # Identifica duplicatas
            
            if [ -n "$colunas" ]; then
              echo "O arquivo $arquivo contém colunas duplicadas: $colunas"
              encontrada=true
              saida+="$saida$arquivo: $colunas"$'\n'
            fi
          fi
        done

        if [ "$encontrada" == true ]; then
          echo "::error::Existe arquivo no PR com colunas duplicadas na criação de tabelas."
          SLACK_MESSAGE="Existe arquivo no PR com colunas duplicadas na criação de tabelas. PR - ${{ github.event.number }} - github.com/${GITHUB_REPOSITORY}/pull/${{ github.event.number }}/files (${{ github.base_ref }})\n$saida"
          curl -X POST -H 'Content-type: application/json' --data '{"text":"'"$SLACK_MESSAGE"'"}' ${{ secrets.SLACK_WEBHOOK_URL }}
          PR_NUMBER=$(echo "${{ github.event.pull_request.html_url }}" | awk -F'/' '{print $NF}')
          REPO_OWNER=$(echo "${{ github.repository }}" | cut -d '/' -f 1)
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          AUTHOR_NAME=${{ github.event.pull_request.user.login }}
          gh pr comment $PR_NUMBER -R $REPO_OWNER/$REPO_NAME --body "@$AUTHOR_NAME
          Existe arquivo no PR com colunas duplicadas na criação de tabelas.
          ${saida}Por favor revisar"
          exit 1
        else
          echo "PR OK"
        fi
