name: deploy-critical

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'

jobs:
  validar-critico:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      #- name: Configurar variável de ambiente GH_TOKEN
       # run: echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV 

      - name: Imprimir alterações
        run: |
          echo "Referência antes do evento: ${{ github.event.before }}"
          echo "SHA do commit atual: ${{ github.sha }}"
          git diff --name-only ${{ github.event.before }} ${{ github.sha }}  

      - name: Verificar Conteúdo do PR
        run: |
         echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV 
         palavras_chave=("ALTER TABLE" "DROP PACKAGE")  # Substitua pela lista de palavras-chave desejada
         outras_palavras=("AB.ABC" "AB.CAB")  # Substitua pela segunda lista de palavras 
      
         encontrada=false 
         saida=""
      
                  echo ">>>>>>>>>antes do for>>>>>>>>>>> $encontrada"
         echo "#############################################################  ${{ github.event_name }}"
         echo "##########################opened###################################  ${{ github.event.action }}"
         
         if [[ "${{ github.event.action }}" == "opened" || "${{ github.event.action }}" == "reopened"  ]]; then
           echo "Pull request acabou de ser aberto. Verificando novos arquivos adicionados."
     
           # Obtém a lista de arquivos adicionados no pull request
           arquivos_adicionados=($(git diff --name-only HEAD^1))
           echo "##########################arquivos_adicionados###################################  ${arquivos_adicionados[*]}"
     
           for arquivo in "${arquivos_adicionados[@]}"; do
             echo "Novo arquivo adicionado: $arquivo"
             
             # Ler o arquivo linha por linha
             while IFS= read -r line; do
               for palavra_chave in "${palavras_chave[@]}"; do
                 for outra_palavra in "${outras_palavras[@]}"; do
                   # Verificar se a linha contém tanto a palavra-chave quanto a outra palavra
                   if echo "$line" | grep -q -i "$palavra_chave" && echo "$line" | grep -q -i "$outra_palavra"; then
                     echo "Encontrada a palavra-chave '$palavra_chave' e a outra palavra '$outra_palavra' na mesma linha no arquivo: $arquivo"
                     encontrada=true
                     saida="$saida$palavra_chave no objeto $outra_palavra no arquivo $arquivo\n"
                   fi
                 done
               done
             done < "$arquivo"
           done
         else 
           for arquivo in $(git diff --name-only ${{ github.event.before }} ${{ github.sha }}); do
             while IFS= read -r line; do
               for palavra_chave in "${palavras_chave[@]}"; do
                 for outra_palavra in "${outras_palavras[@]}"; do
                   # Verificar se a linha contém tanto a palavra-chave quanto a outra palavra
                   if echo "$line" | grep -q -i "$palavra_chave" && echo "$line" | grep -q -i "$outra_palavra"; then
                     echo "Encontrada a palavra-chave '$palavra_chave' e a outra palavra '$outra_palavra' na mesma linha no arquivo: $arquivo"
                     encontrada=true
                     saida="$saida$palavra_chave no objeto $outra_palavra no arquivo $arquivo\n"
                   fi
                 done
               done
             done < "$arquivo"
           done
         fi
         
         echo ">>>>>>>depois do for>>>>>>>>>>>>> $encontrada"
     
         if [ "$encontrada" == true ]; then
           echo "::warning::Uma ou mais palavras-chave foram encontradas nos arquivos. Adicionando a label 'bug'..."
           gh pr edit ${{ github.event.number }} --add-label bug
         fi
     
         echo ">>>>>>>>>>depois da label>>>>>>>>>> $encontrada"
     
         if [ "$encontrada" == true ]; then
           SLACK_MESSAGE="Label 'Bug' adicionada ao PR: ${{ github.event.number }} - github.com/${GITHUB_REPOSITORY}/pull/${{ github.event.number }}/files (${{ github.base_ref }})\n$saida"
           curl -X POST -H 'Content-type: application/json' --data '{"text":"'"$SLACK_MESSAGE"'"}' ${{ secrets.SLACK_WEBHOOK_URL }}
           PR_NUMBER=$(echo "${{ github.event.pull_request.html_url }}" | awk -F'/' '{print $NF}')
           REPO_OWNER=$(echo "${{ github.repository }}" | cut -d '/' -f 1)
           REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
           AUTHOR_NAME=${{ github.event.pull_request.user.login }}
         
           gh pr comment $PR_NUMBER -R $REPO_OWNER/$REPO_NAME --body "@$AUTHOR_NAME
     
           Deploy crítico.
           Horário sugerido de implementação após as 23:00
           "
           exit 0
         fi
