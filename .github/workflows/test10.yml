name: Validar Commits nos Arquivos SQL
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited

jobs:
  validar-commits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configurar variável de ambiente GH_TOKEN
      run: echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV 

    - name: Obter lista de arquivos alterados
      run: |
        # Obter a lista de arquivos alterados no pull request
        arquivos_alterados=($(git diff --name-only HEAD^1))

        # Adicionar ação para validar encoding
        for arquivo in "${arquivos_alterados[@]}"; do
          encoding_info=$(file --mime-encoding "$arquivo")
          # Verificar se o encoding é UTF-8
        if [[ "$encoding_info" != *utf-8 ]]; then
        echo "::error::O arquivo $arquivo não está codificado como UTF-8."
        saida+="O arquivo $arquivo não está codificado como UTF-8"$'\n'
        encontrado=true
        fi
        done
        
        if [ "$encontrada" == true ]; then
        SLACK_MESSAGE="UTF-8 Encoding Error PR ${{ github.event.number }} - github.com/${GITHUB_REPOSITORY}/pull/${{ github.event.number }}/files (${{ github.base_ref }})Existe arquivo que não está codificado como UTF-8.\n{{ $saida }}"
        curl -X POST -H 'Content-type: application/json' --data '{"text":"'"$SLACK_MESSAGE"'"}' ${{ secrets.SLACK_WEBHOOK_URL }}
        PR_NUMBER=$(echo "${{ github.event.pull_request.html_url }}" | awk -F'/' '{print $NF}')
        REPO_OWNER=$(echo "${{ github.repository }}" | cut -d '/' -f 1)
        REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
        AUTHOR_NAME=${{ github.event.pull_request.user.login }}
        gh pr comment $PR_NUMBER -R $REPO_OWNER/$REPO_NAME --body "@$AUTHOR_NAME
        O arquivo $arquivo não está codificado como UTF-8.
        Por favor, corrija o encoding e faça um novo commit."
        exit 1
        fi
        
